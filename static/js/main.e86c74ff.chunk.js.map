{"version":3,"sources":["components/Modal/Modal.module.css","components/Button/Button.module.css","components/Gallery/Galerry.module.css","components/Button/Button.js","components/Modal/Modal.js","components/Gallery/Galerry.js","services/pexelsApi.js","App.js","index.js"],"names":["module","exports","Button","children","onClick","allyProps","type","className","s","defaultProps","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","source","createPortal","Modal__backdrop","Modal__content","src","alt","Component","Gallery","state","queryValue","elem","showModal","toggleModal","setState","handleChange","value","handleSubmit","preventDefault","getQuery","getElem","gallery","tiny","Searchbar","SearchForm","onSubmit","SearchForm_button","SearchForm_button_label","SearchForm_input","autofocus","placeholder","name","onChange","ImageGallery","map","el","ImageGalleryItem","href","ImageGalleryItem_image","genId","q","p","a","pP","key","baseUrl","params","url","options","method","headers","Authorization","fetch","response","json","result","data","photos","getFetch","App","query","page","then","catch","err","prevProps","prevState","prev","aria-label","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e86c74ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__1ixbw\",\"Modal__content\":\"Modal_Modal__content__2erN1\",\"Modal\":\"Modal_Modal__1KKyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1eHUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Galerry_Searchbar__1yVnW\",\"SearchForm\":\"Galerry_SearchForm__3YKci\",\"SearchForm_button\":\"Galerry_SearchForm_button__1VCmy\",\"SearchForm_button_label\":\"Galerry_SearchForm_button_label__2fo0M\",\"SearchForm_input\":\"Galerry_SearchForm_input__28y-W\",\"ImageGallery\":\"Galerry_ImageGallery__1DVlB\",\"ImageGalleryItem\":\"Galerry_ImageGalleryItem____4z7\",\"ImageGalleryItem_image\":\"Galerry_ImageGalleryItem_image__R6jLT\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Button.module.css\"\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n    <button type=\"button\" className={s.Button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from \"./Modal.module.css\"\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n\r\n    }\r\n\r\n     handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n    };\r\n    \r\n    handleBackdropClick = event => {\r\n        // console.log('Кликнули в бекдроп');\r\n        // console.log('currentTarget: ', event.currentTarget);\r\n        // console.log('target: ', event.target);\r\n\r\n        if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n    }\r\n    render() {\r\n        const { children, source } = this.props;\r\n        return createPortal(\r\n            <div className={s.Modal__backdrop} onClick={this.handleBackdropClick}>\r\n                <div className={s.Modal__content}>\r\n                    <img src={source} alt=\"\" />\r\n                    {children}</div>\r\n            </div>, modalRoot,\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n\r\n","import React, { Component } from \"react\";\r\nimport s from \"./Galerry.module.css\";\r\nimport { v4 as genId } from \"uuid\";\r\nimport Modal from \"../Modal/Modal\"\r\n\r\nclass Gallery extends Component\r\n{\r\n    state = {\r\n        queryValue: \"\",\r\n        elem: null,\r\n        showModal : false\r\n    };\r\n    \r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }));\r\n    \r\n    }\r\nhandleChange = (e) => {\r\n    console.log(e.target.value)\r\n    this.setState({ queryValue: e.target.value })\r\n    }\r\n\r\nhandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { getQuery } = this.props;\r\n    getQuery(this.state.queryValue)\r\n    this.state.queryValue = \"\";\r\n}\r\n    \r\n    getElem = (elem) => {\r\n    this.toggleModal();\r\n    this.setState({ elem });\r\n    }\r\n    \r\n    render() {\r\n        const { gallery} = this.props;\r\n        const {handleChange, handleSubmit, getElem } = this;\r\n        const {  queryValue,showModal,elem } = this.state;\r\n        return (\r\n            <>\r\n        \r\n          {showModal && <Modal onClose = {this.toggleModal} source={elem.src.tiny}>\r\n          </Modal>}\r\n                <div> <header className={s.Searchbar}>\r\n                    \r\n     <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n    <button type=\"submit\" className={s.SearchForm_button}>\r\n    <span className={s.SearchForm_button_label}>Search</span>\r\n    </button>\r\n\r\n    <input\r\n    className={s.SearchForm_input}\r\n      type=\"text\"\r\n    //   autocomplete=\"off\"\r\n    autofocus\r\n    placeholder=\"Search images and photos\"\r\n        name=\"query\"\r\n        onChange={handleChange}\r\n        value={queryValue}\r\n    />\r\n  </form>\r\n            </header></div>\r\n   \r\n            \r\n    <ul className={s.ImageGallery}>\r\n                {gallery.map((el) => (\r\n                    <li key key={genId()} className={s.ImageGalleryItem}>  \r\n                    <div >\r\n                    <a\r\n                     href=\"#\" onClick={() => {\r\n                        getElem(el);\r\n                      }}\r\n                    >\r\n                      <img src={el.src.tiny} alt={el.alt} className={s.ImageGalleryItem_image}/>\r\n                    </a>\r\n                  </div>\r\n                        \r\n                    </li>\r\n   \r\n))}\r\n</ul>\r\n\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Gallery","async function getFetch(q, p, pP = 12) {\r\n//   let key = \"21072746-8c3dd0d1e8e29ef8d58afec32\";\r\n    let key = `563492ad6f917000010000013bbd01457a39431887d74f69015c0d48`;\r\n  const baseUrl = `https://api.pexels.com/v1`;\r\n\r\n  // прописываем параметры запроса, согласно доков API\r\n  // ДОБАВЛЯЕМ ПАРАМЕТР ДЛЯ СТРАНИЦ\r\n  let params = `/search?query=${q}&per_page=${pP}&page=${p}`;\r\n\r\n  // сливаем встроку запроса перед отправкой\r\n  let url = baseUrl + params;\r\n\r\n  // создаем объект опций для запроса, по докам API, для передачи ключа\r\n  let options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: key,\r\n    },\r\n  };\r\n\r\n  // собственно запрос и обработка ответа на него\r\n  const response = await fetch(url, options);\r\n  const result = await response.json();\r\n  const data = result.photos;\r\n  return data;\r\n}\r\n\r\nexport default { getFetch };","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport { v4 as genId } from \"uuid\";\n\n// import Modal from \"./components/Modal/Modal\";\nimport Button from \"./components/Button/Button\";\nimport Gallery from \"./components/Gallery/Galerry\";\nimport getGalleryItems from \"./services/pexelsApi\";\nconst { getFetch } = getGalleryItems;\n\n\nclass App extends Component {\n  state = {\n    query: \"moon\",\n    page: 1,\n    gallery: [],\n    // showModal : false\n  }\n  \n\n   componentDidMount() {\n    const { query, page } = this.state;\n    getFetch(query, page)\n      .then((result) => {\n        console.log(result);\n        this.setState({ gallery: [...result] });\n      })\n      .catch((err) => {});\n  }\n\n   componentDidUpdate(prevProps, prevState) {\n    const { query, page } = this.state;\n    if (query !== prevState.query) {\n      getFetch(query, page)\n        .then((result) => {\n          console.log(result);\n          this.setState((prev) => ({ gallery: [...prev.gallery, ...result] }));\n        })\n        .catch((err) => {});\n    }\n  }\n  \n  // toggleModal = () => {\n  //   this.setState(({ showModal }) => ({\n  //     showModal: !showModal,\n  //   }));\n\n  getQuery = (query) => {\n    this.setState({query})\n    \n  }\n  render() {\n    const { gallery, showModal } = this.state\n    const { getQuery } = this;\n  \n      return (\n        <div>\n         \n          <h1 className=\"title\">Search images</h1>\n          <Gallery gallery={gallery} getQuery={getQuery }/>\n          <Button aria-label=\"Загрузить еще\">Load more</Button>\n          \n        </div>\n    );\n  }\n}\n\n  \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}